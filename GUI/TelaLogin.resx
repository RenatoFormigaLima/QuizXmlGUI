<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJoAAACqCAYAAABVhVa6AAABhWlDQ1BJQ0MgcHJvZmlsZQAAKM+VkT1I
        w1AUhU/TSkUqDnZQcchQdbEgKuIoUSyChdJWaNXB5KV/0KQhSXFxFFwLDv4sVh1cnHV1cBUEwR8QRycn
        RRcp8b6k0CJU8MLlfZz3zuG9+wChXmaaFZgANN02kzFJzGRXxeArAhiEj3pMZpYRTy2m0bG+7ukk1V2U
        Z+F/1avmLAb4ROI5Zpg28QbxzKZtcN4nDrOirBKfE4+bdEHiR64rHr9xLrgs8MywmU7OE4eJxUIbK23M
        iqZGPE0cUTWd8oWMxyrnLc5aucqa9+QvDOX0lRTXqYcRwxLiSECEgipKKMNGlFadFAtJ2pc6+Idcf4Jc
        CrlKYORYQAUaZNcP/ge/Z2vlpya9pJAEdL04zscIENwFGjXH+T52nMYJ4H8GrvSWv1IHZj9Jr7W0yBHQ
        tw1cXLc0ZQ+43AEGngzZlF3JTy3k88D7GX1TFui/BXrWvLk193H6AKRpVss3wMEhMFqg7PUO7+5un9uf
        Z9z5QfoBehByqpBCX54AAAAJcEhZcwAADrwAAA68AZW8ckkAAAAHdElNRQfmBBkBHCgGWHN6AAAC/klE
        QVR4Xu3SwW4bQQwEUf//Tye62UAqgmTt7HQPq4B3XpKzX2ZmZmZmZmZmZmZmZmZmZmZmZrP780tmGP0s
        K9iw6CfYwQ6MHjqJFUcP2sBKosdrZKHRY53CAqKHOZFtih5jArspOv5EtjA6+GR2cXRkfbMLosPqX/ZB
        dFD9n70ZHVGvsxeiw+l99iQ6mH7PIDqUPmc/ogPpOvaIDqPrjY4OonXGRsfQOiOjQ2i9UdEBdJ8R0eK6
        3/HR0rrf0dHC2ufIaFHtd1y0pPY7KlpQOY6JllOOI6LFlKc+Wkp5qqOFlKs2Wka5aqNllK0uWkL56qIl
        lK8qWkA9aqLh1aMmGl49aqLh1aMiGlx94qOh1Sc+Glp94qOh1Sc+Glp9oqOB1Ss2Gla9YqNh1Ss2Gla9
        YqNh1Ss2Gla9YqNh1Ss2Gla9YqNh1Ss2Gla9YqNh1Ss2Gla9YqNh1Ss6Glh94qOh1Sc+Glp94qOh1Sc+
        Glp9KqLB1aUiGlw9aqLh1aMmGl49qqIFlK8uWkL56qIllK8yWkS5aqNllKs6Wkh56qOllOeIaDHlOCZa
        TjmOihbUfsdFS2q/I6NFtc/R0cK63/HR0rrfiGhx3WdUdACtNzI6hNYZGx1D64yODqLr2SM6jK5jP6ID
        6XMG0aH0e/YkOpjeZy9Eh9Pr7M3oiHrOfhkdU/+yC6LD6ptdHB15MlsYHXwiuyk6/gS2IXqIk9nm6FFO
        YmHRIzWzgujhGlhx9KBprDB6yFYWED3MFLYgOrSYvRgdT5+xR3QYrTUmWl57HBktqhzV0ULKVhUtoC7R
        0cDqFhcNqTNERIPpTNuiYXS226MhNMOt0QCa45bow5plefRRzbQ0+qBmWhp9UDMtjT6omZZGH9RMS6MP
        aqbl0Uc1y23RxzXHbdHHNcPt0RA627ZoGJ0pIhpM54iKBlS36GhgdamKFlC26mghZTkuWlJ7jImW11r2
        iA6jz9gL0eH0nF0YHXga2xw9Sis7JHrc1czMzMzMzMzMzMzMzMzMLLqvr7/nC7U04LZEjAAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>